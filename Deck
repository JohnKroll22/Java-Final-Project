import java.util.*;

public class Deck {
    private final ArrayList<Card> cards;
    private int currentCardIndex;

    public Deck(){
        cards = new ArrayList<>();
        String [] suits = {"Diamonds", "Hearts", "Clubs", "Spades"};
        String [] ranks = {"2","3","4","5","6","7","8","9","10","Jack","Queen","King","Ace"};

        for(String suit: suits){
            for(String rank: ranks){
                cards.add(new Card(rank, suit));
            }
        }
        currentCardIndex = 0;
    }

    public void shuffle(){
        Collections.shuffle(cards);
        currentCardIndex = 0;
    }

    public Card drawCard(){
        if(currentCardIndex<cards.size()){
            Card drawnCard = cards.get(currentCardIndex++);
            cards.remove(currentCardIndex);
            return drawnCard;
        }
        else{
            return null;
        }
        
    }

    public ArrayList<Card> dealHand(int numCards){
        ArrayList<Card> hand = new ArrayList<>();
        for(int i = 0; i<numCards; i++){
            Card card = drawCard();
            if(card != null){
                hand.add(card);
            }
        }
        return hand;
    }

    public void reset(){
        cards.clear();
        String [] suits = {"Diamonds", "Hearts", "Clubs", "Spades"};
        String [] ranks = {"2","3","4","5","6","7","8","9","10","Jack","Queen","King","Ace"};

        for(String suit: suits){
            for(String rank: ranks){
                cards.add(new Card(rank, suit));
            }
        }
        currentCardIndex = 0;
        Collections.shuffle(cards);
    }

    public static int calculateHandValue(ArrayList<Card> hand){
        int total = 0;
        int aceCount = 0;

        for(Card card: hand){
            total+= card.getValue();
            if(card.getRank().equals("Ace")){
                aceCount++;
            }
        }
        while(total>21 && aceCount>0){
            total-=10;
            aceCount--;
        }
        return total;
    }

    
}
